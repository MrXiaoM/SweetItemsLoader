package top.mrxiaom.sweet.itemsadder.utils;

import java.util.HashMap;

public class Offset {
    public static final HashMap<Integer, String> positive = new HashMap<>();
    public static final HashMap<Integer, String> negative = new HashMap<>();

    public static void init() {
        positive.put(Integer.MAX_VALUE, "\uf800");
        positive.put(0, "");
        positive.put(1, "\uf825\uf804");
        positive.put(2, "\uf822");
        positive.put(3, "\uf823");
        positive.put(4, "\uf824");
        positive.put(5, "\uf825");
        positive.put(6, "\uf826");
        positive.put(7, "\uf827");
        positive.put(8, "\uf828");
        positive.put(9, "\uf827\uf822");
        positive.put(10, "\uf828\uf822");
        positive.put(11, "\uf828\uf823");
        positive.put(12, "\uf828\uf824");
        positive.put(13, "\uf828\uf825");
        positive.put(14, "\uf828\uf826");
        positive.put(15, "\uf828\uf827");
        positive.put(16, "\uf829");
        positive.put(17, "\uf828\uf827\uf822");
        positive.put(18, "\uf829\uf822");
        positive.put(19, "\uf829\uf823");
        positive.put(20, "\uf829\uf824");
        positive.put(21, "\uf829\uf825");
        positive.put(22, "\uf829\uf826");
        positive.put(23, "\uf829\uf827");
        positive.put(24, "\uf829\uf828");
        positive.put(25, "\uf829\uf826\uf822");
        positive.put(26, "\uf829\uf828\uf822");
        positive.put(27, "\uf829\uf828\uf823");
        positive.put(28, "\uf829\uf828\uf824");
        positive.put(29, "\uf829\uf828\uf825");
        positive.put(30, "\uf829\uf828\uf826");
        positive.put(31, "\uf829\uf828\uf827");
        positive.put(32, "\uf82a");
        positive.put(33, "\uf829\uf828\uf827\uf822");
        positive.put(34, "\uf82a\uf822");
        positive.put(35, "\uf82a\uf823");
        positive.put(36, "\uf82a\uf824");
        positive.put(37, "\uf82a\uf825");
        positive.put(38, "\uf82a\uf826");
        positive.put(39, "\uf82a\uf827");
        positive.put(40, "\uf82a\uf828");
        positive.put(41, "\uf82a\uf827\uf822");
        positive.put(42, "\uf82a\uf828\uf822");
        positive.put(43, "\uf82a\uf828\uf823");
        positive.put(44, "\uf82a\uf828\uf824");
        positive.put(45, "\uf82a\uf828\uf825");
        positive.put(46, "\uf82a\uf828\uf826");
        positive.put(47, "\uf82a\uf828\uf827");
        positive.put(48, "\uf82a\uf829");
        positive.put(49, "\uf82a\uf828\uf827\uf822");
        positive.put(50, "\uf82a\uf829\uf822");
        positive.put(51, "\uf82a\uf829\uf823");
        positive.put(52, "\uf82a\uf829\uf824");
        positive.put(53, "\uf82a\uf829\uf825");
        positive.put(54, "\uf82a\uf829\uf826");
        positive.put(55, "\uf82a\uf829\uf827");
        positive.put(56, "\uf82a\uf829\uf828");
        positive.put(57, "\uf82a\uf829\uf827\uf822");
        positive.put(58, "\uf82a\uf829\uf828\uf822");
        positive.put(59, "\uf82a\uf829\uf828\uf823");
        positive.put(60, "\uf82a\uf829\uf828\uf824");
        positive.put(61, "\uf82a\uf829\uf828\uf825");
        positive.put(62, "\uf82a\uf829\uf828\uf826");
        positive.put(63, "\uf82a\uf829\uf828\uf827");
        positive.put(64, "\uf82b");
        positive.put(65, "\uf82a\uf829\uf828\uf827\uf822");
        positive.put(66, "\uf82b\uf822");
        positive.put(67, "\uf82b\uf823");
        positive.put(68, "\uf82b\uf824");
        positive.put(69, "\uf82b\uf825");
        positive.put(70, "\uf82b\uf826");
        positive.put(71, "\uf82b\uf827");
        positive.put(72, "\uf82b\uf828");
        positive.put(73, "\uf82b\uf827\uf822");
        positive.put(74, "\uf82b\uf828\uf822");
        positive.put(75, "\uf82b\uf828\uf823");
        positive.put(76, "\uf82b\uf828\uf824");
        positive.put(77, "\uf82b\uf828\uf825");
        positive.put(78, "\uf82b\uf828\uf826");
        positive.put(79, "\uf82b\uf828\uf827");
        positive.put(80, "\uf82b\uf829");
        positive.put(81, "\uf82b\uf828\uf827\uf822");
        positive.put(82, "\uf82b\uf829\uf822");
        positive.put(83, "\uf82b\uf829\uf823");
        positive.put(84, "\uf82b\uf829\uf824");
        positive.put(85, "\uf82b\uf829\uf825");
        positive.put(86, "\uf82b\uf829\uf826");
        positive.put(87, "\uf82b\uf829\uf827");
        positive.put(88, "\uf82b\uf829\uf828");
        positive.put(89, "\uf82b\uf829\uf827\uf822");
        positive.put(90, "\uf82b\uf829\uf828\uf822");
        positive.put(91, "\uf82b\uf829\uf828\uf823");
        positive.put(92, "\uf82b\uf829\uf828\uf824");
        positive.put(93, "\uf82b\uf829\uf828\uf825");
        positive.put(94, "\uf82b\uf829\uf828\uf826");
        positive.put(95, "\uf82b\uf829\uf828\uf827");
        positive.put(96, "\uf82b\uf82a");
        positive.put(97, "\uf82b\uf829\uf828\uf827\uf822");
        positive.put(98, "\uf82b\uf82a\uf822");
        positive.put(99, "\uf82b\uf82a\uf823");
        positive.put(100, "\uf82b\uf82a\uf824");
        positive.put(101, "\uf82b\uf82a\uf825");
        positive.put(102, "\uf82b\uf82a\uf826");
        positive.put(103, "\uf82b\uf82a\uf827");
        positive.put(104, "\uf82b\uf82a\uf828");
        positive.put(105, "\uf82b\uf82a\uf827\uf822");
        positive.put(106, "\uf82b\uf82a\uf828\uf822");
        positive.put(107, "\uf82b\uf82a\uf828\uf823");
        positive.put(108, "\uf82b\uf82a\uf828\uf824");
        positive.put(109, "\uf82b\uf82a\uf828\uf825");
        positive.put(110, "\uf82b\uf82a\uf828\uf826");
        positive.put(111, "\uf82b\uf82a\uf828\uf827");
        positive.put(112, "\uf82b\uf82a\uf829");
        positive.put(113, "\uf82b\uf82a\uf828\uf827\uf822");
        positive.put(114, "\uf82b\uf82a\uf829\uf822");
        positive.put(115, "\uf82b\uf82a\uf829\uf823");
        positive.put(116, "\uf82b\uf82a\uf829\uf824");
        positive.put(117, "\uf82b\uf82a\uf829\uf825");
        positive.put(118, "\uf82b\uf82a\uf829\uf826");
        positive.put(119, "\uf82b\uf82a\uf829\uf827");
        positive.put(120, "\uf82b\uf82a\uf829\uf828");
        positive.put(121, "\uf82b\uf82a\uf829\uf827\uf822");
        positive.put(122, "\uf82b\uf82a\uf829\uf828\uf822");
        positive.put(123, "\uf82b\uf82a\uf829\uf828\uf823");
        positive.put(124, "\uf82b\uf82a\uf829\uf828\uf824");
        positive.put(125, "\uf82b\uf82a\uf829\uf828\uf825");
        positive.put(126, "\uf82b\uf82a\uf829\uf828\uf826");
        positive.put(127, "\uf82b\uf82a\uf829\uf828\uf827");
        positive.put(128, "\uf82c");
        int i = 1;
        for (int i2 = 129; i2 <= 255; i2++) {
            positive.put(i2, "\uf82c" + positive.get(i));
            i++;
        }
        positive.put(256, "\uf82d");
        int i3 = 1;
        for (int i4 = 257; i4 <= 511; i4++) {
            positive.put(i4, "\uf82d" + positive.get(i3));
            i3++;
        }
        positive.put(512, "\uf82e");
        int i5 = 1;
        for (int i6 = 513; i6 <= 1023; i6++) {
            positive.put(i6, "\uf82e" + positive.get(i5));
            i5++;
        }
        positive.put(1024, "\uf82f");
        int i7 = 1;
        for (int i8 = 1025; i8 <= 2048; i8++) {
            negative.put(i8, "\uf80f" + positive.get(i7));
            i7++;
        }
        negative.put(0, "");
        negative.put(1, "\uf801");
        negative.put(2, "\uf802");
        negative.put(3, "\uf803");
        negative.put(4, "\uf804");
        negative.put(5, "\uf805");
        negative.put(6, "\uf806");
        negative.put(7, "\uf807");
        negative.put(8, "\uf808");
        negative.put(9, "\uf808\uf801");
        negative.put(10, "\uf808\uf802");
        negative.put(11, "\uf808\uf803");
        negative.put(12, "\uf808\uf804");
        negative.put(13, "\uf808\uf805");
        negative.put(14, "\uf808\uf806");
        negative.put(15, "\uf808\uf807");
        negative.put(16, "\uf809");
        negative.put(17, "\uf809\uf801");
        negative.put(18, "\uf809\uf802");
        negative.put(19, "\uf809\uf803");
        negative.put(20, "\uf809\uf804");
        negative.put(21, "\uf809\uf805");
        negative.put(22, "\uf809\uf806");
        negative.put(23, "\uf809\uf807");
        negative.put(24, "\uf809\uf808");
        negative.put(25, "\uf809\uf808\uf801");
        negative.put(26, "\uf809\uf808\uf802");
        negative.put(27, "\uf809\uf808\uf803");
        negative.put(28, "\uf809\uf808\uf804");
        negative.put(29, "\uf809\uf808\uf805");
        negative.put(30, "\uf809\uf808\uf806");
        negative.put(31, "\uf809\uf808\uf807");
        negative.put(32, "\uf80a");
        negative.put(33, "\uf80a\uf801");
        negative.put(34, "\uf80a\uf802");
        negative.put(35, "\uf80a\uf803");
        negative.put(36, "\uf80a\uf804");
        negative.put(37, "\uf80a\uf805");
        negative.put(38, "\uf80a\uf806");
        negative.put(39, "\uf80a\uf807");
        negative.put(40, "\uf80a\uf808");
        negative.put(41, "\uf80a\uf808\uf801");
        negative.put(42, "\uf80a\uf808\uf802");
        negative.put(43, "\uf80a\uf808\uf803");
        negative.put(44, "\uf80a\uf808\uf804");
        negative.put(45, "\uf80a\uf808\uf805");
        negative.put(46, "\uf80a\uf808\uf806");
        negative.put(47, "\uf80a\uf808\uf807");
        negative.put(48, "\uf80a\uf809");
        negative.put(49, "\uf80a\uf809\uf801");
        negative.put(50, "\uf80a\uf809\uf802");
        negative.put(51, "\uf80a\uf809\uf803");
        negative.put(52, "\uf80a\uf809\uf804");
        negative.put(53, "\uf80a\uf809\uf805");
        negative.put(54, "\uf80a\uf809\uf806");
        negative.put(55, "\uf80a\uf809\uf807");
        negative.put(56, "\uf80a\uf809\uf808");
        negative.put(57, "\uf80a\uf809\uf808\uf801");
        negative.put(58, "\uf80a\uf809\uf808\uf802");
        negative.put(59, "\uf80a\uf809\uf808\uf803");
        negative.put(60, "\uf80a\uf809\uf808\uf804");
        negative.put(61, "\uf80a\uf809\uf808\uf805");
        negative.put(62, "\uf80a\uf809\uf808\uf806");
        negative.put(63, "\uf80a\uf809\uf808\uf807");
        negative.put(64, "\uf80b");
        negative.put(65, "\uf80b\uf801");
        negative.put(66, "\uf80b\uf802");
        negative.put(67, "\uf80b\uf803");
        negative.put(68, "\uf80b\uf804");
        negative.put(69, "\uf80b\uf805");
        negative.put(70, "\uf80b\uf806");
        negative.put(71, "\uf80b\uf807");
        negative.put(72, "\uf80b\uf808");
        negative.put(73, "\uf80b\uf808\uf801");
        negative.put(74, "\uf80b\uf808\uf802");
        negative.put(75, "\uf80b\uf808\uf803");
        negative.put(76, "\uf80b\uf808\uf804");
        negative.put(77, "\uf80b\uf808\uf805");
        negative.put(78, "\uf80b\uf808\uf806");
        negative.put(79, "\uf80b\uf808\uf807");
        negative.put(80, "\uf80b\uf809");
        negative.put(81, "\uf80b\uf809\uf801");
        negative.put(82, "\uf80b\uf809\uf802");
        negative.put(83, "\uf80b\uf809\uf803");
        negative.put(84, "\uf80b\uf809\uf804");
        negative.put(85, "\uf80b\uf809\uf805");
        negative.put(86, "\uf80b\uf809\uf806");
        negative.put(87, "\uf80b\uf809\uf807");
        negative.put(88, "\uf80b\uf809\uf808");
        negative.put(89, "\uf80b\uf809\uf808\uf801");
        negative.put(90, "\uf80b\uf809\uf808\uf802");
        negative.put(91, "\uf80b\uf809\uf808\uf803");
        negative.put(92, "\uf80b\uf809\uf808\uf804");
        negative.put(93, "\uf80b\uf809\uf808\uf805");
        negative.put(94, "\uf80b\uf809\uf808\uf806");
        negative.put(95, "\uf80b\uf809\uf808\uf807");
        negative.put(96, "\uf80b\uf80a");
        negative.put(97, "\uf80b\uf80a\uf801");
        negative.put(98, "\uf80b\uf80a\uf802");
        negative.put(99, "\uf80b\uf80a\uf803");
        negative.put(100, "\uf80b\uf80a\uf804");
        negative.put(101, "\uf80b\uf80a\uf805");
        negative.put(102, "\uf80b\uf80a\uf806");
        negative.put(103, "\uf80b\uf80a\uf807");
        negative.put(104, "\uf80b\uf80a\uf808");
        negative.put(105, "\uf80b\uf80a\uf808\uf801");
        negative.put(106, "\uf80b\uf80a\uf808\uf802");
        negative.put(107, "\uf80b\uf80a\uf808\uf803");
        negative.put(108, "\uf80b\uf80a\uf808\uf804");
        negative.put(109, "\uf80b\uf80a\uf808\uf805");
        negative.put(110, "\uf80b\uf80a\uf808\uf806");
        negative.put(111, "\uf80b\uf80a\uf808\uf807");
        negative.put(112, "\uf80b\uf80a\uf809");
        negative.put(113, "\uf80b\uf80a\uf809\uf801");
        negative.put(114, "\uf80b\uf80a\uf809\uf802");
        negative.put(115, "\uf80b\uf80a\uf809\uf803");
        negative.put(116, "\uf80b\uf80a\uf809\uf804");
        negative.put(117, "\uf80b\uf80a\uf809\uf805");
        negative.put(118, "\uf80b\uf80a\uf809\uf806");
        negative.put(119, "\uf80b\uf80a\uf809\uf807");
        negative.put(120, "\uf80b\uf80a\uf809\uf808");
        negative.put(121, "\uf80b\uf80a\uf809\uf808\uf801");
        negative.put(122, "\uf80b\uf80a\uf809\uf808\uf802");
        negative.put(123, "\uf80b\uf80a\uf809\uf808\uf803");
        negative.put(124, "\uf80b\uf80a\uf809\uf808\uf804");
        negative.put(125, "\uf80b\uf80a\uf809\uf808\uf805");
        negative.put(126, "\uf80b\uf80a\uf809\uf808\uf806");
        negative.put(127, "\uf80b\uf80a\uf809\uf808\uf807");
        negative.put(128, "\uf80c");
        int i9 = 1;
        for (int i10 = 129; i10 <= 255; i10++) {
            negative.put(i10, "\uf80c" + negative.get(i9));
            i9++;
        }
        negative.put(256, "\uf80d");
        int i11 = 1;
        for (int i12 = 257; i12 <= 511; i12++) {
            negative.put(i12, "\uf80d" + negative.get(i11));
            i11++;
        }
        negative.put(512, "\uf80e");
        int i13 = 1;
        for (int i14 = 513; i14 <= 1023; i14++) {
            negative.put(i14, "\uf80e" + negative.get(i13));
            i13++;
        }
        negative.put(1024, "\uf80f");
        int i15 = 1;
        for (int i16 = 1025; i16 <= 2048; i16++) {
            negative.put(i16, "\uf80f" + negative.get(i15));
            i15++;
        }
    }

    public static String get(int offset) {
        if (offset == 0) {
            return "";
        }
        if (offset >= 0) {
            return Offset.positive.get(Math.abs(offset));
        }
        return Offset.negative.get(Math.abs(offset));
    }
}
